# Copyright 2021 Adam Chalkley
#
# https://github.com/atc0005/check-vmware
#
# Licensed under the MIT License. See LICENSE file in the project root for
# full license information.



############################################################################
# Automatically detect datacenters, evaluate all of them
############################################################################


# Look at triggered alarms for all managed object types (e.g., Datastore and
# VirtualMachine), across all detected datacenters, do not evaluate any
# triggered alarms which have been previously acknowledged.
define command{
    command_name    check_vmware_alarms
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --trust-cert --log-level info
    }

# Look at triggered alarms for all managed object types (e.g., Datastore and
# VirtualMachine), across all detected datacenters AND evaluate any triggered
# alarms which have been previously acknowledged.
define command{
    command_name    check_vmware_alarms_eval_acknowledged
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --include-type '$ARG4$' --eval-acknowledged --trust-cert --log-level info
    }

# Look at triggered alarms for specified managed object types (e.g., Datastore
# and VirtualMachine), across all detected datacenters, do not evaluate any
# triggered alarms which have been previously acknowledged.
define command{
    command_name    check_vmware_alarms_include_types
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --include-type '$ARG4$' --trust-cert --log-level info
    }

# Look at triggered alarms for specified managed object types (e.g., Datastore
# and VirtualMachine), across all detected datacenters AND also evaluate any
# triggered alarms which have been previously acknowledged, but not yet
# resolved.
define command{
    command_name    check_vmware_alarms_include_types_eval_acknowledged
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --include-type '$ARG4$' --eval-acknowledged --trust-cert --log-level info
    }

# Look at triggered alarms associated with managed objects which do not match
# the specified list of managed object types (e.g., Datastore and
# VirtualMachine) across all detected datacenters, do not evaluate any
# triggered alarms which have been previously acknowledged.
define command{
    command_name    check_vmware_alarms_exclude_types
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --exclude-type '$ARG4$' --trust-cert --log-level info
    }

# Look at triggered alarms associated with managed objects which do not match
# the specified list of managed object types (e.g., Datastore and
# VirtualMachine) across all detected datacenters AND also evaluate any
# triggered alarms which have been previously acknowledged, but not yet
# resolved.
define command{
    command_name    check_vmware_alarms_exclude_types_eval_acknowledged
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --exclude-type '$ARG4$' --eval-acknowledged --trust-cert --log-level info
    }

# Look at triggered alarms whose name matches the specified list of alarm name
# substrings (e.g., "datastore usage on disk"), across all detected
# datacenters, do not evaluate any triggered alarms which have been previously
# acknowledged.
define command{
    command_name    check_vmware_alarms_include_names
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --include-name '$ARG4$' --trust-cert --log-level info
    }

# Look at triggered alarms whose name matches the specified list of alarm name
# substrings (e.g., "datastore usage on disk"), across all detected
# datacenters AND also evaluate any triggered alarms which have been
# previously acknowledged, but not yet resolved.
define command{
    command_name    check_vmware_alarms_include_names_eval_acknowledged
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --include-name '$ARG4$' --eval-acknowledged --trust-cert --log-level info
    }

# Look at triggered alarms whose name does not match the specified list of
# alarm name substrings (e.g., "datastore usage on disk") across all detected
# datacenters, do not evaluate any triggered alarms which have been previously
# acknowledged.
define command{
    command_name    check_vmware_alarms_exclude_names
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --exclude-name '$ARG4$' --trust-cert --log-level info
    }

# Look at triggered alarms whose name does not match the specified list of
# alarm name substrings (e.g., "datastore usage on disk") across all detected
# datacenters AND also evaluate any triggered alarms which have been
# previously acknowledged, but not yet resolved.
define command{
    command_name    check_vmware_alarms_exclude_names_eval_acknowledged
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --exclude-name '$ARG4$' --eval-acknowledged --trust-cert --log-level info
    }

# Look at triggered alarms whose description matches the specified list of
# alarm description substrings (e.g., "monitor datastore disk usage"), across
# all detected datacenters, do not evaluate any triggered alarms which have
# been previously acknowledged.
define command{
    command_name    check_vmware_alarms_include_descs
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --include-desc '$ARG4$' --trust-cert --log-level info
    }

# Look at triggered alarms whose description matches the specified list of
# alarm description substrings (e.g., "monitor datastore disk usage"), across
# all detected datacenters AND also evaluate any triggered alarms which have
# been previously acknowledged, but not yet resolved.
define command{
    command_name    check_vmware_alarms_include_descs_eval_acknowledged
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --include-desc '$ARG4$' --eval-acknowledged --trust-cert --log-level info
    }

# Look at triggered alarms whose description does not match the specified list
# of alarm description substrings (e.g., "monitor datastore disk usage")
# across all detected datacenters, do not evaluate any triggered alarms which
# have been previously acknowledged.
define command{
    command_name    check_vmware_alarms_exclude_descs
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --exclude-desc '$ARG4$' --trust-cert --log-level info
    }

# Look at triggered alarms whose description does not match the specified list
# of alarm description substrings (e.g., "monitor datastore disk usage")
# across all detected datacenters AND also evaluate any triggered alarms which
# have been previously acknowledged, but not yet resolved.
define command{
    command_name    check_vmware_alarms_exclude_descs_eval_acknowledged
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --exclude-desc '$ARG4$' --eval-acknowledged --trust-cert --log-level info
    }


############################################################################
# Use specified datacenter(s) only
############################################################################

# Look at triggered alarms for all managed object types (e.g., Datastore and
# VirtualMachine), within specified datacenters. Do not evaluate any triggered
# alarms which have been previously acknowledged.
define command{
    command_name    check_vmware_alarms_specific_dc
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --trust-cert --log-level info
    }

# Look at triggered alarms for all managed object types (e.g., Datastore and
# VirtualMachine), within specified datacenters. Evaluate any triggered alarms
# which have been previously acknowledged.
define command{
    command_name    check_vmware_alarms_specific_dc_eval_acknowledged
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --eval-acknowledged --trust-cert --log-level info
    }

# Look at triggered alarms for specified managed object types (e.g., Datastore
# and VirtualMachine), within specified datacenters. Do not evaluate any
# triggered alarms which have been previously acknowledged.
define command{
    command_name    check_vmware_alarms_specific_dc_include_types
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --include-type '$ARG4$' --dc-name '$ARG5$' --trust-cert --log-level info
    }

# Look at triggered alarms for specified managed object types (e.g., Datastore
# and VirtualMachine), within specified datacenters. Evaluate any triggered
# alarms which have been previously acknowledged, but not yet resolved.
define command{
    command_name    check_vmware_alarms_specific_dc_include_types_eval_acknowledged
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --include-type '$ARG4$' --dc-name '$ARG5$' --eval-acknowledged --trust-cert --log-level info
    }

# Look at triggered alarms associated with managed objects which do not match
# the specified list of managed object types (e.g., Datastore and
# VirtualMachine) within specified datacenters. Do not evaluate any triggered
# alarms which have been previously acknowledged.
define command{
    command_name    check_vmware_alarms_specific_dc_exclude_types
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --exclude-type '$ARG4$' --dc-name '$ARG5$' --trust-cert --log-level info
    }

# Look at triggered alarms associated with managed objects which do not match
# the specified list of managed object types (e.g., Datastore and
# VirtualMachine) within specified datacenters. Evaluate any triggered alarms
# which have been previously acknowledged, but not yet resolved.
define command{
    command_name    check_vmware_alarms_specific_dc_exclude_types_eval_acknowledged
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --exclude-type '$ARG4$' --dc-name '$ARG5$' --eval-acknowledged --trust-cert --log-level info
    }

# Look at triggered alarms whose name matches the specified list of alarm name
# substrings (e.g., "datastore usage on disk"), within specified datacenters,
# fallback to default datacenter if not found. Do not evaluate any triggered
# alarms which have been previously acknowledged.
define command{
    command_name    check_vmware_alarms_specific_dc_include_names
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --include-name '$ARG4$' --dc-name '$ARG5$' --trust-cert --log-level info
    }

# Look at triggered alarms whose name matches the specified list of alarm name
# substrings (e.g., "datastore usage on disk"), within specified datacenters.
# Evaluate any triggered alarms which have been previously acknowledged, but
# not yet resolved.
define command{
    command_name    check_vmware_alarms_specific_dc_include_names_eval_acknowledged
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --include-name '$ARG4$' --dc-name '$ARG5$' --eval-acknowledged --trust-cert --log-level info
    }

# Look at triggered alarms whose name does not match the specified list of
# alarm name substrings (e.g., "datastore usage on disk"), within specified
# datacenters. Do not evaluate any triggered alarms which have been previously
# acknowledged.
define command{
    command_name    check_vmware_alarms_specific_dc_exclude_names
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --exclude-name '$ARG4$' --dc-name '$ARG5$' --trust-cert --log-level info
    }

# Look at triggered alarms whose name does not match the specified list of
# alarm name substrings (e.g., "datastore usage on disk") wwithin specified
# datacenters. Evaluate any triggered alarms which have been previously
# acknowledged, but not yet resolved.
define command{
    command_name    check_vmware_alarms_specific_dc_exclude_names_eval_acknowledged
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --exclude-name '$ARG4$' --dc-name '$ARG5$' --eval-acknowledged --trust-cert --log-level info
    }

# Look at triggered alarms whose description matches the specified list of
# alarm description substrings (e.g., "monitor datastore disk usage"), within
# specified datacenters, fallback to default datacenter if not found. Do not
# evaluate any triggered alarms which have been previously acknowledged.
define command{
    command_name    check_vmware_alarms_specific_dc_include_descs
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --include-desc '$ARG4$' --dc-name '$ARG5$' --trust-cert --log-level info
    }

# Look at triggered alarms whose description matches the specified list of
# alarm description substrings (e.g., "monitor datastore disk usage"), within
# specified datacenters. Evaluate any triggered alarms which have been
# previously acknowledged, but not yet resolved.
define command{
    command_name    check_vmware_alarms_specific_dc_include_descs_eval_acknowledged
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --include-desc '$ARG4$' --dc-name '$ARG5$' --eval-acknowledged --trust-cert --log-level info
    }

# Look at triggered alarms whose description does not match the specified list
# of alarm description substrings (e.g., "monitor datastore disk usage"),
# within specified datacenters. Do not evaluate any triggered alarms which
# have been previously acknowledged.
define command{
    command_name    check_vmware_alarms_specific_dc_exclude_descs
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --exclude-desc '$ARG4$' --dc-name '$ARG5$' --trust-cert --log-level info
    }

# Look at triggered alarms whose description does not match the specified list
# of alarm description substrings (e.g., "monitor datastore disk usage")
# wwithin specified datacenters. Evaluate any triggered alarms which have been
# previously acknowledged, but not yet resolved.
define command{
    command_name    check_vmware_alarms_specific_dc_exclude_descs_eval_acknowledged
    command_line    /usr/lib/nagios/plugins/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --exclude-desc '$ARG4$' --dc-name '$ARG5$' --eval-acknowledged --trust-cert --log-level info
    }
