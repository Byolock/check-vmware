# Copyright 2021 Adam Chalkley
#
# https://github.com/atc0005/check-vmware
#
# Licensed under the MIT License. See LICENSE file in the project root for
# full license information.


# https://assets.nagios.com/downloads/nagioscore/docs/nagioscore/3/en/objectdefinitions.html

# generic service template definition
define service{
    name                            generic-service ; The 'name' of this service template
    active_checks_enabled           1       ; Active service checks are enabled
    passive_checks_enabled          1       ; Passive service checks are enabled/accepted
    parallelize_check               1       ; Active service checks should be parallelized (disabling this can lead to major performance problems)
    obsess_over_service             1       ; We should obsess over this service (if necessary)
    check_freshness                 0       ; Default is to NOT check service 'freshness'
    notifications_enabled           1       ; Service notifications are enabled
    event_handler_enabled           1       ; Service event handler is enabled
    flap_detection_enabled          1       ; Flap detection is enabled
    failure_prediction_enabled      1       ; Failure prediction is enabled
    process_perf_data               1       ; Process performance data
    retain_status_information       1       ; Retain status information across program restarts
    retain_nonstatus_information    1       ; Retain non-status information across program restarts
    notification_interval           0       ; Only send notifications on status change by default.
    is_volatile                     0
    check_period                    24x7
    normal_check_interval           3

    # The number of minutes to wait before scheduling a re-check when
    # service has changed to non-OK state. Notice that if the service has
    # been retried max_attempts time without a change in its status, it
    # will revert to being scheduled at check_interval rate.
    retry_check_interval            1
    max_check_attempts              4
    notification_period             24x7

    # notification_options is used to determine when notifications for the
    # service should be sent out. Valid options are a combination of one
    # or more of the following:
    #
    # w = send notifications on a WARNING state
    # u = send notifications on an UNKNOWN state
    # c = send notifications on a CRITICAL state
    # r = send notifications on recoveries (OK state)
    # f = send notifications when the service starts and stops flapping
    # s = send notifications when scheduled downtime starts and ends
    # n (none) as an option, no service notifications will be sent
    #
    # If you do not specify any notification options, Nagios
    # will assume that you want notifications to be sent out for all
    # possible states.
    #
    # Example:
    #
    # If you specify w,r in this field, notifications will only be sent
    # out when the service goes into a WARNING state and when it recovers
    # from a WARNING state.
    notification_options            w,u,c,r
    contact_groups                  admins
    register                        0       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
    }
